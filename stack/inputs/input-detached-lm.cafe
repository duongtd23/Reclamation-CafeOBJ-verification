ipsgopen PROP .
  inv p13(S:Sys, T:UInt, T2:UInt, X:Addr) .
  inv p23(S:Sys, T:UInt, T2:UInt, X:Addr) .
  inv rc-addr-lm2(S:Sys, T:UInt, X:Addr) .
  generate detached-lm3(S:Sys, T:UInt, T2:UInt, X:Addr) induction on S:Sys .
close
set-output detached-lm3.cafe .
:save-proof .
-- eof

ipsgopen PROP .
  inv p10(S:Sys, T:UInt, X:Addr, K:UInt) .
  inv p24(S:Sys, T:UInt, X:Addr, K:UInt) .
  inv detached-lm2(S:Sys, T:UInt, T2:UInt, X:Addr, K:UInt) .
  inv detached-lm4(S:Sys, T:UInt, T2:UInt, X:Addr, K:UInt) .
  generate detached-lm5(S:Sys, T:UInt, X:Addr, K:UInt) induction on S:Sys .
close
set-output detached-lm5.cafe .
:save-proof .
-- eof

ipsgopen PROP .
  inv detached-lm1(S:Sys, T:UInt, X:Addr) .
  inv p23(S:Sys, T:UInt, T2:UInt, X:Addr) .
  inv p25(S:Sys, T:UInt, T2:UInt, X:Addr) .
  generate detached-lm6(S:Sys, T:UInt, T2:UInt, X:Addr) induction on S:Sys .
close
set-output detached-lm6.cafe .
:save-proof .
-- eof


eof
load properties.cafe .
load inputs/input-detached-lm.cafe .
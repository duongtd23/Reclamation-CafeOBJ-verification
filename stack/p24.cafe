--> true
open PROP .
  op k : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  red p24(init,t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq (r2 \in addrInUse(s)) = true .
  red p24(s,t,x,k) implies p24(alloc-n(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq (r2 \in addrInUse(s)) = false .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(alloc-n(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq (r2 \in addrInUse(s)) = false .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(alloc-n(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = false .
  red p24(s,t,x,k) implies p24(alloc-n(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = false .
  red p24(s,t,x,k) implies p24(alloc-n(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l8) = false .
  red p24(s,t,x,k) implies p24(alloc-n(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l1 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(assign-hp(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l1 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(assign-hp(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l1 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = false .
  red p24(s,t,x,k) implies p24(assign-hp(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l1 .
  eq (0 < r1) = false .
  red p24(s,t,x,k) implies p24(assign-hp(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l1) = false .
  red p24(s,t,x,k) implies p24(assign-hp(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l5 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(assign-n(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l5 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(assign-n(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l5) = false .
  red p24(s,t,x,k) implies p24(assign-n(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l2 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(assign-p(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l2 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(assign-p(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l2) = false .
  red p24(s,t,x,k) implies p24(assign-p(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l4 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(assign-v(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l4 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(assign-v(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l4) = false .
  red p24(s,t,x,k) implies p24(assign-v(s,r1),t,x,k) .
close

--> true, use p27 as a lemma
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq t = r1 .
  eq top(s) = p(s,r1) .
  eq nextk(n(s,r1),k) = x .
  eq p(s,r1) = x .
  red p27(s,r1,k) implies (p24(s,t,x,k) implies p24(cas(s,r1),t,x,k)) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq t = r1 .
  eq top(s) = p(s,r1) .
  eq nextk(n(s,r1),k) = x .
  eq (p(s,r1) = x) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq t = r1 .
  eq top(s) = p(s,r1) .
  eq (nextk(n(s,r1),k) = x) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq t = r1 .
  eq (top(s) = p(s,r1)) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq pc(s,t) = f1 .
  eq nextk(n(s,r1),k) = x .
  eq nextk(p(s,r1),k) = x .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true, use p26 as a lemma
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq pc(s,t) = f1 .
  eq nextk(n(s,r1),k) = x .
  eq (nextk(p(s,r1),k) = x) = false .
  eq p(s,t) = x .
  red p26(s,t,r1,x,k) implies (p24(s,t,x,k) implies p24(cas(s,r1),t,x,k)) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq pc(s,t) = f1 .
  eq nextk(n(s,r1),k) = x .
  eq (nextk(p(s,r1),k) = x) = false .
  eq (p(s,t) = x) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq pc(s,t) = f1 .
  eq (nextk(n(s,r1),k) = x) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq pc(s,t) = f2 .
  eq nextk(n(s,r1),k) = x .
  eq nextk(p(s,r1),k) = x .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true, use p26 as a lemma
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq pc(s,t) = f2 .
  eq nextk(n(s,r1),k) = x .
  eq (nextk(p(s,r1),k) = x) = false .
  eq p(s,t) = x .
  red p26(s,t,r1,x,k) implies (p24(s,t,x,k) implies p24(cas(s,r1),t,x,k)) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq pc(s,t) = f2 .
  eq nextk(n(s,r1),k) = x .
  eq (nextk(p(s,r1),k) = x) = false .
  eq (p(s,t) = x) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq pc(s,t) = f2 .
  eq (nextk(n(s,r1),k) = x) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq pc(s,t) = l7 .
  eq nextk(n(s,r1),k) = x .
  eq nextk(p(s,r1),k) = x .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true, use p26 as a lemma
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq pc(s,t) = l7 .
  eq nextk(n(s,r1),k) = x .
  eq (nextk(p(s,r1),k) = x) = false .
  eq p(s,t) = x .
  red p26(s,t,r1,x,k) implies (p24(s,t,x,k) implies p24(cas(s,r1),t,x,k)) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq pc(s,t) = l7 .
  eq nextk(n(s,r1),k) = x .
  eq (nextk(p(s,r1),k) = x) = false .
  eq (p(s,t) = x) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq pc(s,t) = l7 .
  eq (nextk(n(s,r1),k) = x) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq top(s) = p(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq (pc(s,t) = l7) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  eq (top(s) = p(s,r1)) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l6) = false .
  red p24(s,t,x,k) implies p24(cas(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq t = r1 .
  eq top(s) = tp(s,r1) .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq t = r1 .
  eq (top(s) = tp(s,r1)) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq pc(s,t) = f1 .
  eq nextk(nd(s,r1),k) = x .
  eq nextk(tp(s,r1),k) = x .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true, use p28 as a lemma
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq pc(s,t) = f1 .
  eq nextk(nd(s,r1),k) = x .
  eq (nextk(tp(s,r1),k) = x) = false .
  eq p(s,t) = x .
  red p28(s,t,r1,x,k) implies (p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k)) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq pc(s,t) = f1 .
  eq nextk(nd(s,r1),k) = x .
  eq (nextk(tp(s,r1),k) = x) = false .
  eq (p(s,t) = x) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq pc(s,t) = f1 .
  eq (nextk(nd(s,r1),k) = x) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq pc(s,t) = f2 .
  eq nextk(nd(s,r1),k) = x .
  eq nextk(tp(s,r1),k) = x .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true, use p28 as a lemma
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq pc(s,t) = f2 .
  eq nextk(nd(s,r1),k) = x .
  eq (nextk(tp(s,r1),k) = x) = false .
  eq p(s,t) = x .
  red p28(s,t,r1,x,k) implies (p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k)) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq pc(s,t) = f2 .
  eq nextk(nd(s,r1),k) = x .
  eq (nextk(tp(s,r1),k) = x) = false .
  eq (p(s,t) = x) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq pc(s,t) = f2 .
  eq (nextk(nd(s,r1),k) = x) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq pc(s,t) = l7 .
  eq nextk(nd(s,r1),k) = x .
  eq nextk(tp(s,r1),k) = x .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true, use p28 as a lemma
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq pc(s,t) = l7 .
  eq nextk(nd(s,r1),k) = x .
  eq (nextk(tp(s,r1),k) = x) = false .
  eq p(s,t) = x .
  red p28(s,t,r1,x,k) implies (p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k)) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq pc(s,t) = l7 .
  eq nextk(nd(s,r1),k) = x .
  eq (nextk(tp(s,r1),k) = x) = false .
  eq (p(s,t) = x) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq pc(s,t) = l7 .
  eq (nextk(nd(s,r1),k) = x) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq top(s) = tp(s,r1) .
  eq (pc(s,t) = f1) = false .
  eq (pc(s,t) = f2) = false .
  eq (pc(s,t) = l7) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  eq (top(s) = tp(s,r1)) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l12) = false .
  red p24(s,t,x,k) implies p24(cas2(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f6 .
  eq t = r1 .
  eq (iter(s,r1) < N) = true .
  eq isfree(s,r1) = true .
  red p24(s,t,x,k) implies p24(ch-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f6 .
  eq t = r1 .
  eq (iter(s,r1) < N) = true .
  eq isfree(s,r1) = false .
  red p24(s,t,x,k) implies p24(ch-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f6 .
  eq t = r1 .
  eq (iter(s,r1) < N) = false .
  eq isfree(s,r1) = true .
  eq iter(s,r1) = N .
  red p24(s,t,x,k) implies p24(ch-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f6 .
  eq t = r1 .
  eq (iter(s,r1) < N) = false .
  eq isfree(s,r1) = true .
  eq (iter(s,r1) = N) = false .
  red p24(s,t,x,k) implies p24(ch-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f6 .
  eq t = r1 .
  eq (iter(s,r1) < N) = false .
  eq isfree(s,r1) = false .
  red p24(s,t,x,k) implies p24(ch-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f6 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(ch-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = f6) = false .
  red p24(s,t,x,k) implies p24(ch-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l3 .
  eq t = r1 .
  eq p(s,r1) = nil .
  red p24(s,t,x,k) implies p24(ch-p(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l3 .
  eq t = r1 .
  eq (p(s,r1) = nil) = false .
  red p24(s,t,x,k) implies p24(ch-p(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l3 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(ch-p(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l3) = false .
  red p24(s,t,x,k) implies p24(ch-p(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f7 .
  eq m(s,r1) = r2 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(free(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f7 .
  eq m(s,r1) = r2 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(free(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f7 .
  eq (m(s,r1) = r2) = false .
  red p24(s,t,x,k) implies p24(free(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = f7) = false .
  red p24(s,t,x,k) implies p24(free(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f1 .
  eq p(s,r1) = r2 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(insert-p(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f1 .
  eq p(s,r1) = r2 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(insert-p(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f1 .
  eq (p(s,r1) = r2) = false .
  red p24(s,t,x,k) implies p24(insert-p(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = f1) = false .
  red p24(s,t,x,k) implies p24(insert-p(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l10 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(load-top(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l10 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(load-top(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l10) = false .
  red p24(s,t,x,k) implies p24(load-top(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f5 .
  eq (r2 \in detached(s,r1)) = true .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(pop-detach(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f5 .
  eq (r2 \in detached(s,r1)) = true .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(pop-detach(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f5 .
  eq (r2 \in detached(s,r1)) = false .
  red p24(s,t,x,k) implies p24(pop-detach(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = f5) = false .
  red p24(s,t,x,k) implies p24(pop-detach(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f3 .
  eq t = r1 .
  eq detached(s,r1) = empty .
  red p24(s,t,x,k) implies p24(rd-detached(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f3 .
  eq t = r1 .
  eq (detached(s,r1) = empty) = false .
  red p24(s,t,x,k) implies p24(rd-detached(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f3 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(rd-detached(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = f3) = false .
  red p24(s,t,x,k) implies p24(rd-detached(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l7 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(reclaim(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l7 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(reclaim(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l7) = false .
  red p24(s,t,x,k) implies p24(reclaim(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = idle .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(run-pop(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = idle .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(run-pop(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = idle) = false .
  red p24(s,t,x,k) implies p24(run-pop(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = idle .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(run-push(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = idle .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(run-push(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = idle) = false .
  red p24(s,t,x,k) implies p24(run-push(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f2 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(set-inuse(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f2 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(set-inuse(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = f2) = false .
  red p24(s,t,x,k) implies p24(set-inuse(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f4 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(set-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f4 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(set-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = f4) = false .
  red p24(s,t,x,k) implies p24(set-isfree(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l11 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(set-next(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l11 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(set-next(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l11) = false .
  red p24(s,t,x,k) implies p24(set-next(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l9 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(set-val(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = l9 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(set-val(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op r2 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = l9) = false .
  red p24(s,t,x,k) implies p24(set-val(s,r1,r2),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f8 .
  eq t = r1 .
  red p24(s,t,x,k) implies p24(upd-detached(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq pc(s,r1) = f8 .
  eq (t = r1) = false .
  red p24(s,t,x,k) implies p24(upd-detached(s,r1),t,x,k) .
close

--> true
open PROP .
  op k : -> UInt .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  op x : -> Addr .
  eq (pc(s,r1) = f8) = false .
  red p24(s,t,x,k) implies p24(upd-detached(s,r1),t,x,k) .
close

--> Time taken is 3167ms
--> true
open PROP .
  op s : -> Sys .
  op t : -> UInt .
  red p8(init,t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq (r2 \in addrInUse(s)) = true .
  red p8(s,t) implies p8(alloc-n(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq (r2 \in addrInUse(s)) = false .
  eq t = r1 .
  red p8(s,t) implies p8(alloc-n(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq (r2 \in addrInUse(s)) = false .
  eq (t = r1) = false .
  red p8(s,t) implies p8(alloc-n(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = false .
  red p8(s,t) implies p8(alloc-n(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l8 .
  eq (0 < r1) = false .
  red p8(s,t) implies p8(alloc-n(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l8) = false .
  red p8(s,t) implies p8(alloc-n(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l1 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq t = r1 .
  red p8(s,t) implies p8(assign-hp(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l1 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = true .
  eq (t = r1) = false .
  red p8(s,t) implies p8(assign-hp(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l1 .
  eq (0 < r1) = true .
  eq (r1 < s(N)) = false .
  red p8(s,t) implies p8(assign-hp(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l1 .
  eq (0 < r1) = false .
  red p8(s,t) implies p8(assign-hp(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l1) = false .
  red p8(s,t) implies p8(assign-hp(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l5 .
  eq t = r1 .
  red p8(s,t) implies p8(assign-n(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l5 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(assign-n(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l5) = false .
  red p8(s,t) implies p8(assign-n(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l2 .
  eq t = r1 .
  red p8(s,t) implies p8(assign-p(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l2 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(assign-p(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l2) = false .
  red p8(s,t) implies p8(assign-p(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l4 .
  eq t = r1 .
  red p8(s,t) implies p8(assign-v(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l4 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(assign-v(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l4) = false .
  red p8(s,t) implies p8(assign-v(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l6 .
  eq t = r1 .
  red p8(s,t) implies p8(cas(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l6 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(cas(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l6) = false .
  red p8(s,t) implies p8(cas(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l12 .
  eq t = r1 .
  eq top(s) = tp(s,r1) .
  red p8(s,t) implies p8(cas2(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l12 .
  eq t = r1 .
  eq (top(s) = tp(s,r1)) = false .
  red p8(s,t) implies p8(cas2(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l12 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(cas2(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l12) = false .
  red p8(s,t) implies p8(cas2(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f6 .
  eq t = r1 .
  red p8(s,t) implies p8(ch-isfree(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f6 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(ch-isfree(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = f6) = false .
  red p8(s,t) implies p8(ch-isfree(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l3 .
  eq t = r1 .
  eq p(s,r1) = nil .
  red p8(s,t) implies p8(ch-p(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l3 .
  eq t = r1 .
  eq (p(s,r1) = nil) = false .
  red p8(s,t) implies p8(ch-p(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l3 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(ch-p(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l3) = false .
  red p8(s,t) implies p8(ch-p(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f7 .
  eq m(s,r1) = r2 .
  eq t = r1 .
  red p8(s,t) implies p8(free(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f7 .
  eq m(s,r1) = r2 .
  eq (t = r1) = false .
  eq isfree(s,r1) = true .
  eq nd(s,t) = r2 .
  eq pc(s,t) = l12 .
  eq tp(s,t) = nil .
  red p8(s,t) implies p8(free(s,r1,r2),t) .
close

--> true, use p13 as a lemma
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f7 .
  eq m(s,r1) = r2 .
  eq (t = r1) = false .
  eq isfree(s,r1) = true .
  eq nd(s,t) = r2 .
  eq pc(s,t) = l12 .
  eq (tp(s,t) = nil) = false .
  eq next(s,r2) = tp(s,t) .
  red p13(s,r1,t,r2) implies (p8(s,t) implies p8(free(s,r1,r2),t)) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f7 .
  eq m(s,r1) = r2 .
  eq (t = r1) = false .
  eq isfree(s,r1) = true .
  eq nd(s,t) = r2 .
  eq pc(s,t) = l12 .
  eq (tp(s,t) = nil) = false .
  eq (next(s,r2) = tp(s,t)) = false .
  red p8(s,t) implies p8(free(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f7 .
  eq m(s,r1) = r2 .
  eq (t = r1) = false .
  eq isfree(s,r1) = true .
  eq nd(s,t) = r2 .
  eq (pc(s,t) = l12) = false .
  red p8(s,t) implies p8(free(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f7 .
  eq m(s,r1) = r2 .
  eq (t = r1) = false .
  eq isfree(s,r1) = true .
  eq (nd(s,t) = r2) = false .
  red p8(s,t) implies p8(free(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f7 .
  eq m(s,r1) = r2 .
  eq (t = r1) = false .
  eq isfree(s,r1) = false .
  red p8(s,t) implies p8(free(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f7 .
  eq (m(s,r1) = r2) = false .
  red p8(s,t) implies p8(free(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = f7) = false .
  red p8(s,t) implies p8(free(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f1 .
  eq p(s,r1) = r2 .
  eq t = r1 .
  red p8(s,t) implies p8(insert-p(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f1 .
  eq p(s,r1) = r2 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(insert-p(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f1 .
  eq (p(s,r1) = r2) = false .
  red p8(s,t) implies p8(insert-p(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = f1) = false .
  red p8(s,t) implies p8(insert-p(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l10 .
  eq t = r1 .
  red p8(s,t) implies p8(load-top(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l10 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(load-top(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l10) = false .
  red p8(s,t) implies p8(load-top(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f5 .
  eq (r2 \in detached(s,r1)) = true .
  eq t = r1 .
  red p8(s,t) implies p8(pop-detach(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f5 .
  eq (r2 \in detached(s,r1)) = true .
  eq (t = r1) = false .
  red p8(s,t) implies p8(pop-detach(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f5 .
  eq (r2 \in detached(s,r1)) = false .
  red p8(s,t) implies p8(pop-detach(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> Addr .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = f5) = false .
  red p8(s,t) implies p8(pop-detach(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f3 .
  eq t = r1 .
  red p8(s,t) implies p8(rd-detached(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f3 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(rd-detached(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = f3) = false .
  red p8(s,t) implies p8(rd-detached(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l7 .
  eq t = r1 .
  red p8(s,t) implies p8(reclaim(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l7 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(reclaim(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l7) = false .
  red p8(s,t) implies p8(reclaim(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = idle .
  eq t = r1 .
  red p8(s,t) implies p8(run-pop(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = idle .
  eq (t = r1) = false .
  red p8(s,t) implies p8(run-pop(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = idle) = false .
  red p8(s,t) implies p8(run-pop(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = idle .
  eq t = r1 .
  red p8(s,t) implies p8(run-push(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = idle .
  eq (t = r1) = false .
  red p8(s,t) implies p8(run-push(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = idle) = false .
  red p8(s,t) implies p8(run-push(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f2 .
  eq t = r1 .
  red p8(s,t) implies p8(set-inuse(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f2 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(set-inuse(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = f2) = false .
  red p8(s,t) implies p8(set-inuse(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f4 .
  eq t = r1 .
  red p8(s,t) implies p8(set-isfree(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f4 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(set-isfree(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = f4) = false .
  red p8(s,t) implies p8(set-isfree(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l11 .
  eq t = r1 .
  red p8(s,t) implies p8(set-next(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l11 .
  eq (t = r1) = false .
  eq nd(s,r1) = nd(s,t) .
  eq pc(s,t) = l12 .
  eq tp(s,r1) = tp(s,t) .
  red p8(s,t) implies p8(set-next(s,r1),t) .
close

--> true, use p12 as a lemma
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l11 .
  eq (t = r1) = false .
  eq nd(s,r1) = nd(s,t) .
  eq pc(s,t) = l12 .
  eq (tp(s,r1) = tp(s,t)) = false .
  eq next(s,nd(s,t)) = tp(s,t) .
  red p12(s,t,r1) implies (p8(s,t) implies p8(set-next(s,r1),t)) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l11 .
  eq (t = r1) = false .
  eq nd(s,r1) = nd(s,t) .
  eq pc(s,t) = l12 .
  eq (tp(s,r1) = tp(s,t)) = false .
  eq (next(s,nd(s,t)) = tp(s,t)) = false .
  red p8(s,t) implies p8(set-next(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l11 .
  eq (t = r1) = false .
  eq nd(s,r1) = nd(s,t) .
  eq (pc(s,t) = l12) = false .
  red p8(s,t) implies p8(set-next(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l11 .
  eq (t = r1) = false .
  eq (nd(s,r1) = nd(s,t)) = false .
  red p8(s,t) implies p8(set-next(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l11) = false .
  red p8(s,t) implies p8(set-next(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l9 .
  eq t = r1 .
  red p8(s,t) implies p8(set-val(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = l9 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(set-val(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op r2 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = l9) = false .
  red p8(s,t) implies p8(set-val(s,r1,r2),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f8 .
  eq t = r1 .
  red p8(s,t) implies p8(upd-detached(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq pc(s,r1) = f8 .
  eq (t = r1) = false .
  red p8(s,t) implies p8(upd-detached(s,r1),t) .
close

--> true
open PROP .
  op r1 : -> UInt .
  op s : -> Sys .
  op t : -> UInt .
  eq (pc(s,r1) = f8) = false .
  red p8(s,t) implies p8(upd-detached(s,r1),t) .
close

--> Time taken is 2514ms